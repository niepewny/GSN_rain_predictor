LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name          | Type             | Params
---------------------------------------------------
0 | model         | ConvRNNCell      | 22.8 K
1 | loss          | MeanSquaredError | 0
2 | mapping_layer | Conv2d           | 2
---------------------------------------------------
22.8 K    Trainable params
0         Non-trainable params
22.8 K    Total params
0.091     Total estimated model params size (MB)
Epoch 0:   0%|          | 0/949 [00:00<?, ?it/s]                           
C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\connectors\data_connector.py:436: Consider setting `persistent_workers=True` in 'val_dataloader' to speed up the dataloader worker initialization.
C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\data_modules\vizualization.py:41: UserWarning: Attempting to set identical low and high xlims makes transformation singular; automatically expanding.
  slider = Slider(
C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\connectors\data_connector.py:436: Consider setting `persistent_workers=True` in 'train_dataloader' to speed up the dataloader worker initialization.
C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\data_modules\vizualization.py:41: UserWarning: Attempting to set identical low and high xlims makes transformation singular; automatically expanding.
  slider = Slider(
Error executing job with overrides: []
Traceback (most recent call last):
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\hydra\_internal\utils.py", line 394, in _run_hydra
    _run_app(
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\hydra\_internal\utils.py", line 457, in _run_app
    run_and_report(
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\hydra\_internal\utils.py", line 223, in run_and_report
    raise ex
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\hydra\_internal\utils.py", line 220, in run_and_report
    return func()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\hydra\_internal\utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\hydra\_internal\hydra.py", line 132, in run
    _ = ret.return_value
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\hydra\core\utils.py", line 260, in return_value
    raise self._return_value
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\hydra\core\utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "C:/Users/Wojtas/Desktop/gsn/GSN_rain_predictor/main.py", line 82, in main
    trainer.fit(main_model, dm)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 545, in fit
    call._call_and_handle_interrupt(
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\call.py", line 44, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 581, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 990, in _run
    results = self._run_stage()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 1036, in _run_stage
    self.fit_loop.run()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\fit_loop.py", line 202, in run
    self.advance()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\fit_loop.py", line 359, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\training_epoch_loop.py", line 136, in run
    self.advance(data_fetcher)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\training_epoch_loop.py", line 240, in advance
    batch_output = self.automatic_optimization.run(trainer.optimizers[0], batch_idx, kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 187, in run
    self._optimizer_step(batch_idx, closure)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 265, in _optimizer_step
    call._call_lightning_module_hook(
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\call.py", line 157, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\core\module.py", line 1282, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\core\optimizer.py", line 151, in step
    step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\strategies\strategy.py", line 230, in optimizer_step
    return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\plugins\precision\precision_plugin.py", line 117, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\optim\lr_scheduler.py", line 137, in wrapper
    return func.__get__(opt, opt.__class__)(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\optim\optimizer.py", line 487, in wrapper
    out = func(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\optim\optimizer.py", line 91, in _use_grad
    ret = func(self, *args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\optim\adam.py", line 202, in step
    loss = closure()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\plugins\precision\precision_plugin.py", line 104, in _wrap_closure
    closure_result = closure()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 140, in __call__
    self._result = self.closure(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\utils\_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 126, in closure
    step_output = self._step_fn()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 315, in _training_step
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\call.py", line 309, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\strategies\strategy.py", line 382, in training_step
    return self.lightning_module.training_step(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\predictors\RainPredictor.py", line 60, in training_step
    loss, outputs, y = self.common_step(batch)
  File "C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\predictors\RainPredictor.py", line 52, in common_step
    loss = self.compute_loss(outputs, y)
  File "C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\predictors\RainPredictor.py", line 44, in compute_loss
    visualize_batch_tensor_interactive(y_pred.cpu())
  File "C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\data_modules\vizualization.py", line 27, in visualize_batch_tensor_interactive
    tensor = tensor[batch_idx].squeeze(1).numpy()  # Now shape is [sequence, height, width]
RuntimeError: Can't call numpy() on Tensor that requires grad. Use tensor.detach().numpy() instead.
