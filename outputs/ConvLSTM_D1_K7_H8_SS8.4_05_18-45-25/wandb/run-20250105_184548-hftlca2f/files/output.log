LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name               | Type             | Params
--------------------------------------------------------
0 | model              | ConvLSTMCell     | 14.1 K
1 | mapping_activation | Softsign         | 0
2 | loss               | MeanSquaredError | 0
3 | mapping_layer      | Conv2d           | 33
--------------------------------------------------------
14.2 K    Trainable params
0         Non-trainable params
14.2 K    Total params
0.057     Total estimated model params size (MB)
Sanity Checking DataLoader 0:   0%|          | 0/2 [00:00<?, ?it/s]Backend tkagg is interactive backend. Turning interactive mode on.
C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\connectors\data_connector.py:436: Consider setting `persistent_workers=True` in 'val_dataloader' to speed up the dataloader worker initialization.
C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\call.py:54: Detected KeyboardInterrupt, attempting graceful shutdown...
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\connectors\data_connector.py:436: Consider setting `persistent_workers=True` in 'test_dataloader' to speed up the dataloader worker initialization.
Testing: |          | 0/? [00:00<?, ?it/s]
Error executing job with overrides: []
Traceback (most recent call last):
  File "C:/Users/Wojtas/Desktop/gsn/GSN_rain_predictor/main.py", line 87, in main
    trainer.test(model=main_model, datamodule=dm)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 755, in test
    return call._call_and_handle_interrupt(
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\call.py", line 44, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 795, in _test_impl
    results = self._run(model, ckpt_path=ckpt_path)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 990, in _run
    results = self._run_stage()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 1029, in _run_stage
    return self._evaluation_loop.run()
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\utilities.py", line 181, in _decorator
    return loop_run(self, *args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\evaluation_loop.py", line 134, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx, dataloader_iter)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\loops\evaluation_loop.py", line 391, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_args)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\trainer\call.py", line 309, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\pytorch_lightning\strategies\strategy.py", line 416, in test_step
    return self.lightning_module.test_step(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\predictors\RainPredictor.py", line 100, in test_step
    loss = self.common_test_valid_step(batch)
  File "C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\predictors\RainPredictor.py", line 57, in common_test_valid_step
    loss, outputs, y = self.common_step(batch)
  File "C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\predictors\RainPredictor.py", line 52, in common_step
    outputs = self(x)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\nn\modules\module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\nn\modules\module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\GSN_rain_predictor\src\predictors\RainPredictor.py", line 38, in forward
    outputs = self.mapping_activation(self.mapping_layer(outputs))
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\nn\modules\module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\nn\modules\module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\nn\modules\conv.py", line 554, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\Wojtas\Desktop\gsn\.venv\lib\site-packages\torch\nn\modules\conv.py", line 549, in _conv_forward
    return F.conv2d(
RuntimeError: Given groups=1, weight of size [1, 32, 1, 1], expected input[15, 8, 64, 64] to have 32 channels, but got 8 channels instead

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
